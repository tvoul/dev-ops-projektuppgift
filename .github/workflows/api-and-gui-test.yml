name: Unit, rest-api and gui tests

on:
  push:
    branches: [dev]
    #branches: [dev, main]
  #pull_request: 
    #branches: [dev, main]

jobs:

  # unit-tests:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [16.x]
    
  #   steps:
  #   - uses: actions/checkout@v2 
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #   - run: npm ci
  #   - run: npm test
  
  # api-tests:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [16.x]
    
  #   steps:
  #   - uses: actions/checkout@v2 
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #   - run: npm ci
  #   - run: mv backend/database/template.db backend/database/shop.db
  #   - run: npm install -g pm2
  #   - run: pm2 start backend/index.js
  #   - run: npm install -g newman
  #   - run: newman run test-rest-api/test-visitor.postman_collection.json
  #   - run: newman run test-rest-api/test-customer.postman_collection.json
  #   - run: newman run test-rest-api/test-admin.postman_collection.json
  
  # gui-tests:
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       node-version: [16.x]
    
  #   steps:
  #   - uses: actions/checkout@v2 
  #   - name: Use Node.js ${{ matrix.node-version }}
  #     uses: actions/setup-node@v2
  #     with:
  #       node-version: ${{ matrix.node-version }}
  #       cache: 'npm'
  #   - run: npm ci
  #   - run: mv backend/database/template.db backend/database/shop.db
  #   - run: npm install -g pm2
  #   - run: pm2 start backend/index.js
  #   - run: wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  #   - run: sudo apt install ./google-chrome-stable_current_amd64.deb
  #   - run: HEADLESS_CHROME=yes npm run wdio

  go-live:
    #needs: [unit-tests, api-tests, gui-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$AWS_DEVOPS" > ~/.ssh/dev.key
          chmod 600 ~/.ssh/dev.key
          cat >>~/.ssh/config <<END
          Host dev
            HostName $ADDRESS
            User root
            Port $PORT
            IdentityFile ~/.ssh/dev.key
            StrictHostKeyChecking no
          END
        env:
          SSH_KEY: ${{ secrets.AWS_DEVOPS }}
          SSH_HOST: ${{ secrets.ADDRESS }}
          SSH_USER: ${{ secrets.USER }}
          SSH_PORT: ${{ secrets.PORT }}          

      - name: Deploy from dev
        run: cat /home/runner/.ssh/config
        run: ssh dev 'cd ~/dev-branch && git fetch && git pull origin dev && npm install'

      - name: Restart app
        run: ssh dev 'pm2 restart dev'