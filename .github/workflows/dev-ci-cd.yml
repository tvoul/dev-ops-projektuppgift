name: DEV - Unit, rest-api and gui tests

on:
  push:
    branches: [dev]
  pull_request: 
    branches: [dev]

jobs:

  unit-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
    - uses: actions/checkout@v2 
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm test
  
  api-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
    - uses: actions/checkout@v2 
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: mv backend/database/template.db backend/database/shop.db
    - run: npm install -g pm2
    - run: pm2 start backend/index.js
    - run: npm install -g newman
    - run: newman run test-rest-api/test-visitor.postman_collection.json
    - run: newman run test-rest-api/test-customer.postman_collection.json
    - run: newman run test-rest-api/test-admin.postman_collection.json
  
  gui-tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    
    steps:
    - uses: actions/checkout@v2 
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: mv backend/database/template.db backend/database/shop.db
    - run: npm install -g pm2
    - run: pm2 start backend/index.js
    - run: wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - run: sudo apt install ./google-chrome-stable_current_amd64.deb
    - run: HEADLESS_CHROME=yes npm run wdio

  go-live:
    needs: [unit-tests, api-tests, gui-tests]
    runs-on: ubuntu-latest
    steps:
      - name: Configure SSH
        run: |
          mkdir -p ~/.ssh/
          echo "$SSH_KEY" > ~/.ssh/dev.key
          chmod 600 ~/.ssh/dev.key
          cat >>~/.ssh/config <<END
          Host dev
            HostName $SSH_HOST
            User $SSH_USER
            Port $SSH_PORT
            IdentityFile ~/.ssh/dev.key
            StrictHostKeyChecking no
          END
        env:
          SSH_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT }}          

      - name: Deploy from dev
        run: ssh dev 'cd dev-branch/ && git fetch && git pull origin dev && npm install'

      - name: Restart app
        run: ssh dev 'pm2 restart dev'  